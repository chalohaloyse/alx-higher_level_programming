>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


>>> matrix_divided()
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'


>>> matrix = [[1, 2, 3]]								      
>>> matrix_divided(matrix)
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'


Division by a non number
>>> matrix = [[1, 2, 3]]
>>> matrix_divided(matrix, 'test')
Traceback (most recent call last):
...
TypeError: div must be a number


>>> matrix_divided(matrix, None)
Traceback (most recent call last):
...
TypeError: div must be a number


Division by zero
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero


Division by Infinity
>>> matrix_divided(matrix, float("inf"))
[[0.0, 0.0, 0.0]]


Empty Lists
>>> matrix = []
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix = [[2, 4, 6]]
>>> matrix_divided(matrix, 2)
[[1.0, 2.0, 3.0]]

>>> matrix = [[2, 4, 6], [8, 10, 12]]
>>> matrix_divided(matrix, 2)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]


>>> matrix = [[1, 2, 3], [4, 5, 6, 7]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size


>>> matrix = [[1, 2, 3, 4], [5, 6, 7]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size


>>> matrix = [[1, 2, 3, 'pip']]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix = [[1, 2, 3, 'pip'], [1, 2, 3, 4]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
